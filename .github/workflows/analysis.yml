name: Analysis
on:
  push:
  release:
    types:
      - created
#  pull_request:
#    types: [opened, synchronize, reopened]

jobs:
  build:
    name: "analysis"
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.4.0.2170
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      SONAR_CACHE_DIR: sonar_cache
    environment: Analysis
    strategy:
      fail-fast: false
      matrix:
        node: [allfeatures]
    steps:
    
      - name: Checkout (without submodules)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11 (for Sonar)
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH

      - name: Download and set up build-wrapper (for Sonar)
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH

      - name: Checkout and install esp-idf
        uses: 0xFEEDC0DE64/checkout_install_esp_idf@main

      - name: Fast Submodule Checkout components/arduino-esp32
        uses: 0xFEEDC0DE64/fast_submodule_checkout@main
        with:
          submodule: components/arduino-esp32

      - name: Checkout remaining submodules
        run: git submodule update --init --recursive $(git submodule | awk '{ if ($2 != "esp-idf" && $2 != "components/arduino-esp32") print $2 }')

      - name: Setup ccache
        uses: 0xFEEDC0DE64/setup_ccache@main
        with:
          key: ${{ runner.os }}-ccache-${{ matrix.node }}
          
          
      - name: Build firmware
        run: |
          export CCACHE_MAXSIZE=400M CCACHE_BASEDIR="$(pwd)"
          . export.sh
          ./switchconf.sh ${{ matrix.node }}
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} idf.py --ccache build
          ccache -s

      - name: Cache sonar
        uses: 0xFEEDC0DE64/cache-with-update@update-cache-on-cachehit
        with:
          path: ${{ env.SONAR_SERVER_URL }}
          key: ${{ runner.os }}-sonar-${{ matrix.node }}

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" --define sonar.cfamily.cache.path="${{ env.SONAR_CACHE_DIR }}"
