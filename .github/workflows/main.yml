name: Build
on:
  push:
  release:
    types:
      - created
#  pull_request:
#    types: [opened, synchronize, reopened]

jobs:
  build:
    name: "config_name"
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.4.0.2170
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      SONAR_CACHE_DIR: sonar_cache
    environment: deploy
    strategy:
      fail-fast: false
      matrix:
        node: [feedc0de, comred, peter, mick]
    steps:
    
      - name: Checkout (without submodules)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11 (for Sonar)
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH

      - name: Download and set up build-wrapper (for Sonar)
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH

      - name: Checkout and install esp-idf
        uses: 0xFEEDC0DE64/checkout_install_esp_idf@main

      - name: Fast Submodule Checkout components/arduino-esp32
        uses: 0xFEEDC0DE64/fast_submodule_checkout@main
        with:
          submodule: components/arduino-esp32

      - name: Checkout remaining submodules
        run: git submodule update --init --recursive $(git submodule | awk '{ if ($2 != "esp-idf" && $2 != "components/arduino-esp32") print $2 }')

      - name: Setup ccache
        uses: 0xFEEDC0DE64/setup_ccache@main
        with:
          key: ${{ runner.os }}-ccache-${{ matrix.node }}
          
      - name: Install ignore
        run: |
          mkdir -p "$HOME/.ssh"
          echo "${{ secrets.RSYNC_SSH_KEY }}" >"$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"
          rsync -azv --exclude=/.git/ --exclude=/.github/ -e "ssh -i $HOME/.ssh/key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o LogLevel=quiet" github@commanderred.xyz:/home/github/ignore ./ || true
          
      - name: Build firmware
        run: |
          export CCACHE_MAXSIZE=400M CCACHE_BASEDIR="$(pwd)"
          . export.sh
          ./switchconf.sh ${{ matrix.node }}
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} idf.py --ccache build
          ccache -s

      - name: Cache sonar
        uses: 0xFEEDC0DE64/cache-with-update@update-cache-on-cachehit
        with:
          path: ${{ env.SONAR_SERVER_URL }}
          key: ${{ runner.os }}-sonar-${{ matrix.node }}

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" --define sonar.cfamily.cache.path="${{ env.SONAR_CACHE_DIR }}"
          
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: bobbyquad_${{ matrix.node }}
          path: |
            build_${{ matrix.node }}/bobbyquad_${{ matrix.node }}.bin
            build_${{ matrix.node }}/bobbyquad_${{ matrix.node }}.elf
            build_${{ matrix.node }}/bootloader/bootloader.bin
            build_${{ matrix.node }}/bootloader/bootloader.elf
            build_${{ matrix.node }}/partition_table/partition-table.bin
            
      - name: Prepare to upload
        run: |
          mkdir ${{ matrix.node }}
          cp build_${{ matrix.node }}/bobbyquad_${{ matrix.node }}.bin ${{ matrix.node }}/${{ steps.vars.outputs.sha_short }}.${{ steps.vars.outputs.branch }}.bin
          cp build_${{ matrix.node }}/bobbyquad_${{ matrix.node }}.elf ${{ matrix.node }}/${{ steps.vars.outputs.sha_short }}.${{ steps.vars.outputs.branch }}.elf
          echo ${{ steps.vars.outputs.sha_short }}
          echo Prepare for upload from ${{ matrix.node }}/ to /home/github/builds/${{ matrix.node }}
          
      
      - name: Deploy to file-host
        run: |
          rsync --recursive --compress --progress --human-readable --rsh 'ssh -oPort=22 -i $HOME/.ssh/key' ${{ matrix.node }} commanderred.xyz:/home/github/tmp || true
          
      - name: Create Symlink on server
        uses: appleboy/ssh-action@master
        with:
          host: commanderred.xyz
          username: github
          key: ${{ secrets.RSYNC_SSH_KEY }}
          port: 22
          script: |
            mkdir -p /home/github/builds/${{ matrix.node }}
            mv /home/github/tmp/${{ matrix.node }}/* /home/github/builds/${{ matrix.node }}/
            rm /home/github/tmp/${{ matrix.node }} -rf
            rm -f /home/github/builds/${{ matrix.node }}/latest.bin
            rm -f /home/github/builds/${{ matrix.node }}/${{ steps.vars.outputs.branch }}.latest.bin
            ln -s /home/github/builds/${{ matrix.node }}/${{ steps.vars.outputs.sha_short }}.${{ steps.vars.outputs.branch }}.bin /home/github/builds/${{ matrix.node }}/latest.bin
            ln -s /home/github/builds/${{ matrix.node }}/${{ steps.vars.outputs.sha_short }}.${{ steps.vars.outputs.branch }}.bin /home/github/builds/${{ matrix.node }}/${{ steps.vars.outputs.branch }}.latest.bin
            cd bobbycar-boardcomputer-firmware
            git pull || true
